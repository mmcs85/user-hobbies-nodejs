{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PassionLevel": {
				"enum": [
					0,
					1,
					2,
					3
				],
				"type": "number"
			},
			"Hobby": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"passionLevel": {
						"$ref": "#/components/schemas/PassionLevel"
					},
					"name": {
						"type": "string"
					},
					"year": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"_id",
					"userId",
					"passionLevel",
					"name",
					"year"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Hobby.userId-or-passionLevel-or-name-or-year_": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"passionLevel": {
						"$ref": "#/components/schemas/PassionLevel"
					},
					"name": {
						"type": "string"
					},
					"year": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"userId",
					"passionLevel",
					"name",
					"year"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"HobbyCreationParams": {
				"$ref": "#/components/schemas/Pick_Hobby.userId-or-passionLevel-or-name-or-year_"
			},
			"Pick_Hobby._id-or-userId-or-passionLevel-or-name-or-year_": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"passionLevel": {
						"$ref": "#/components/schemas/PassionLevel"
					},
					"name": {
						"type": "string"
					},
					"year": {
						"type": "number",
						"format": "double"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"userId",
					"passionLevel",
					"name",
					"year",
					"_id"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"HobbyEditionParams": {
				"$ref": "#/components/schemas/Pick_Hobby._id-or-userId-or-passionLevel-or-name-or-year_"
			},
			"User": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.name_": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationParams": {
				"$ref": "#/components/schemas/Pick_User.name_"
			},
			"Pick_User._id-or-name_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserEditionParams": {
				"$ref": "#/components/schemas/Pick_User._id-or-name_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "user-hobbies-nodejs",
		"version": "1.0.0",
		"description": "API for a small app “User Hobbies” - Backend Challenge",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/hobbies/{userId}/{skip}/{limit}": {
			"get": {
				"operationId": "List",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Hobby"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "skip",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/hobbies/{userId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Hobby"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/hobbies": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HobbyCreationParams"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HobbyEditionParams"
							}
						}
					}
				}
			}
		},
		"/hobbies/{hobbyId}": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/user/{skip}/{limit}": {
			"get": {
				"operationId": "List",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "skip",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/{userId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserEditionParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}